apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodeapp.fullname" . }}
  labels:
    {{- include "nodeapp.labels" (dict "context" . "component" .Values.backend.config.name "name" .Values.backend.config.name) | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "nodeapp.selectorLabels" (dict "context" . "component" .Values.backend.config.name "name" .Values.backend.config.name) | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nodeapp.selectorLabels" (dict "context" . "component" .Values.backend.config.name "name" .Values.backend.config.name) | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodeapp.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default "latest" }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          ports:
            - name: {{ .Values.service.namedPort | quote}}
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PORT
              value: {{ .Values.service.port | quote }}
            {{- $root := . }}
            {{- range $ref, $values := .Values.backend.secrets }}
            {{- range $key, $value := $values }}
            - name: {{ $ref | upper }}_{{ $key | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "nodeapp.fullname" $root }}-{{ $ref | camelcase | kebabcase }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessProbe.httpGet.path }}
              port: {{ .Values.service.namedPort | quote }}
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.backend.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.readinessProbe.httpGet.path }}
              port: {{ .Values.service.namedPort | quote }}
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.backend.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- with .Values.backend.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
